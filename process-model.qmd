# Process model

timestep: 1 day
currency: MgC/ha
dimension: 0-D

```{r}
SSEM.orig <- function(X, params, inputs, timestep = 86400){

  ##Unit Converstion: umol/m2/sec to Mg/ha/timestep
  k <- 1e-6 * 12 * 1e-6 * 10000 * timestep #mol/umol*gC/mol*Mg/g*m2/ha*sec/timestep

  ## photosynthesis
  LAI <- X[1] * params$SLA * 0.1  #0.1 is conversion from Mg/ha to kg/m2
  GPP <- pmax(0, k * params$alpha * (1 - exp(-0.5 * LAI)) * inputs$PAR)
  GPP[inputs$PAR < 1e-20] = 0 ## night

  ## respiration & allocation
  Ra <- GPP * params$Ra_frac
  NPP <- GPP - Ra

  leaf_alloc <- NPP * params$leaf_frac
  wood_alloc <- NPP * (1 - params$leaf_frac)

  Rh <- pmax(k * params$Rbasal * X[3] * params$Q10 ^ (inputs$temp / 10), 0) ## pmax ensures SOM never goes negative

  ## turnover
  litterfall <- X[1] * params$litterfall
  mortality <- X[2] * params$mortality

  ## update states
  leaves <- pmax(rnorm(1, X[1] + leaf_alloc  - litterfall, params$sigma.leaf), 0)
  LAI <- leaves * params$SLA * 0.1
  wood <- pmax(rnorm(1, X[2] + wood_alloc  - mortality, params$sigma.stem), 0)
  SOM <- pmax(rnorm(1, X[3] + litterfall + mortality - Rh , params$sigma.soil), 0)

  return(cbind(X1 = leaves, 
               X2 = wood, 
               X3 = SOM,
               LAI = LAI,
               GPP = GPP ,
               NEE = -(GPP - Ra - Rh),
               Ra =  Ra,
               NPPw = wood_alloc,
               NPPl = leaf_alloc,
               Rh = Rh,
               litterfall = litterfall,
               mortality = mortality))

}
```

```{r}
params <- list()
params$alpha <- 0.02
params$SLA <- 4.74
params$leaf_frac <- 0.315
params$Ra_frac <- 0.5
params$Rbasal <- 0.002
params$Q10 <- 2.1
params$litterfall <- 1/(365*2) #Two year leaf lifespan
params$mortality <- 0.00015 #Wood lives about 18 years on average (all trees, branches, roots, course roots)
params$sigma.leaf <- 0.0 #0.01 
params$sigma.stem <- 0.0 #0.01 ## wood biomass
params$sigma.soil <- 0.0# 0.01
params <- as.data.frame(params)
```

```{r}
library(tidyverse)
site <- "TALL"
met_s3 <- arrow::s3_bucket(paste0("bio230014-bucket01/neon4cast-drivers/noaa/gefs-v12/stage3/site_id=", site),
                           endpoint_override = "sdsc.osn.xsede.org",
                           anonymous = TRUE)
inputs <- arrow::open_dataset(met_s3) |> 
  filter(variable %in% c("air_temperature", "surface_downwelling_shortwave_flux_in_air")) |> 
  mutate(datetime = as_date(datetime)) |> 
  summarise(prediction = mean(prediction,  na.rm = TRUE), .by =c("variable", "datetime")) |>
  collect() |> 
  pivot_wider(names_from = variable, values_from = prediction) |> 
  rename(temp = air_temperature,
        SW = surface_downwelling_shortwave_flux_in_air) |> 
  mutate(PAR = SW/0.486,
         temp = temp - 273.15) |> 
  select(-SW)

```

```{r}
X <- list()
X$leaf <- 10
X$wood <- 140
X$SOM <- 140
X_init <- as.data.frame(X)
```

```{r}
dates <- seq(as_date("2020-09-30"), as_date("2023-12-01"), by = "1 day")

inputs <- inputs |> 
    filter(datetime %in% dates)

X <- array(NA, dim = c(length(dates), 12))

X[1, 1:3] <- unlist(X_init)


for(i in 2:length(dates)){
  X[i, ]  <- SSEM.orig(X[i-1, 1:3], params = params, inputs = inputs[i, ])
}

out <- as.data.frame(X)
names(out) <- c("leaves","wood","SOM", "LAI", "GPP", "NEE", "Ra", "NPPw", "NPPl", "Rh", "litterfall","mortality")

out <- bind_cols(tibble(datetime = dates), out) 

out |> 
  select(datetime,LAI, wood, SOM, NEE) |>  
  rename(nee = NEE) |> 
  pivot_longer(-datetime, names_to = "variable", values_to = "prediction") |>
  left_join(obs, by = c("datetime", "variable")) |> 
  filter(variable %in% c("LAI", "wood", "SOM", "nee")) |> 
  ggplot(aes(x = datetime)) +
  geom_point(aes(y = prediction)) +
  geom_point(aes(y = observation, color = "red")) + 
  facet_wrap(~variable, scale = "free")


```
